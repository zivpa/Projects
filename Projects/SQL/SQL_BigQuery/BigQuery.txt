
--- Query 1 --- 
SELECT id,title,tags,score,answer_count
FROM `bigquery-public-data.stackoverflow.posts_questions` 
WHERE tags like '%python%'
ORDER BY score DESC
LIMIT 5

***Query 1 - Json***
[
  {
    "id": "231767",
    "title": "What does the \"yield\" keyword do?",
    "tags": "python|iterator|generator|yield|coroutine",
    "score": "10935",
    "answer_count": "43"
  },
  {
    "id": "419163",
    "title": "What does if __name__ == \"__main__\": do?",
    "tags": "python|namespaces|main|python-module|idioms",
    "score": "6629",
    "answer_count": "35"
  },
  {
    "id": "394809",
    "title": "Does Python have a ternary conditional operator?",
    "tags": "python|operators|ternary-operator|conditional-operator",
    "score": "6501",
    "answer_count": "28"
  },
  {
    "id": "100003",
    "title": "What are metaclasses in Python?",
    "tags": "python|oop|metaclass|python-class|python-datamodel",
    "score": "6068",
    "answer_count": "20"
  },
  {
    "id": "82831",
    "title": "How do I check whether a file exists without exceptions?",
    "tags": "python|file|file-exists",
    "score": "6012",
    "answer_count": "41"
  }
]





---Query 2 ---

SELECT COUNT(id) as number_of_results, COUNTIF(answer_count>0) as number_of_answers_above_1, ROUND(AVG(score), 3) as score_mean
FROM `bigquery-public-data.stackoverflow.posts_questions` 
WHERE tags like '%python%' 


***Query 2 - Json***
[
  {
    "number_of_results": "1829702",
    "number_of_answers_above_1": "1528285",
    "score_mean": "2.254"
  }
]


---Query 3 ---

SELECT COUNT(id) as number_of_results, COUNTIF(answer_count>0) as number_of_answers_above_1, ROUND(AVG(score), 3) as score_mean, FORMAT_DATE('%A',creation_date) AS day
FROM `bigquery-public-data.stackoverflow.posts_questions` 
WHERE lower(tags) LIKE '%python%' 
GROUP BY day
ORDER BY number_of_results DESC 

***Query 3 - Json***

[
  {
    "number_of_results": "308103",
    "number_of_answers_above_1": "256655",
    "score_mean": "2.306",
    "day": "Wednesday"
  },
  {
    "number_of_results": "302838",
    "number_of_answers_above_1": "252574",
    "score_mean": "2.354",
    "day": "Thursday"
  },
  {
    "number_of_results": "301992",
    "number_of_answers_above_1": "251789",
    "score_mean": "2.314",
    "day": "Tuesday"
  },
  {
    "number_of_results": "279898",
    "number_of_answers_above_1": "232824",
    "score_mean": "2.162",
    "day": "Monday"
  },
  {
    "number_of_results": "273198",
    "number_of_answers_above_1": "228501",
    "score_mean": "2.259",
    "day": "Friday"
  },
  {
    "number_of_results": "185453",
    "number_of_answers_above_1": "156112",
    "score_mean": "2.131",
    "day": "Sunday"
  },
  {
    "number_of_results": "178220",
    "number_of_answers_above_1": "149830",
    "score_mean": "2.159",
    "day": "Saturday"
  }
]

ביום רביעי עולה כמות הפוסטים המקסימלית בעוד שביום שבת עולה כמות הפוסטים המינימלית. 
יש הבדל קטן (יחסית) באיכות הפוסטים בין הימים, כפי שניתן לראות יש שוני בין ממוצע הדירוג של הפוסטים בכל יום. ניתן לראות כי ביום חמישי ממוצע דירוגי הפוסטים הוא הגבוה ביותר ואילו ראשון ממוצע דירוגי הפוסטים הוא הנמוך ביותר. 


---Query 4 ---

SELECT display_name, reputation,website_url,about_me
FROM `bigquery-public-data.stackoverflow.users` 
WHERE location = 'Sydney, Australia' OR location = 'Sydney'
  AND about_me like '%python%' OR about_me like '%Python%' OR about_me like '%py%'
ORDER BY reputation DESC  
LIMIT 1

***Query 4 - Json***

[
  {
    "display_name": "Martijn Pieters",
    "reputation": "870574",
    "website_url": "http://www.zopatista.com/",
    "about_me": "<p>Invisible framework coding ninja</p>\n\n<p><a href=\"https://www.codementor.io/freelance-developers/python?utm_source=certified_badge&amp;referral=mjpieters-1vw2ujpf3q\" rel=\"nofollow noreferrer\"><img src=\"https://assets.codementor.io/cmx-dev-badge.svg\" /></a><br>\nHave a Python project you need implementing? Hire me through Codementor X.</p>\n\n<p>I have an <a href=\"http://www.amazon.co.uk/registry/wishlist/1E5V9AJISGDO5\" rel=\"nofollow noreferrer\">Amazon Wishlist</a> if you were looking for a different way to say \"thank you\".</p>\n\n\n\n<ul>\n<li><a href=\"http://www.zopatista.com/\" rel=\"nofollow noreferrer\">Personal website</a></li>\n<li><a href=\"https://www.codementor.io?referral=mjpieters-1vw2ujpf3q\" rel=\"nofollow noreferrer\">Codementor.io</a> -- mentoring and smaller freelance jobs</li>\n<li><a href=\"https://talkpython.fm/episodes/show/86/python-at-stackoverflow\" rel=\"nofollow noreferrer\">Interview at <em>Talk Python to Me</em></a></li>\n<li><a href=\"https://www.linkedin.com/in/zopatista/\" rel=\"nofollow noreferrer\">LinkedIn</a></li>\n<li><a href=\"https://keybase.io/zopatista\" rel=\"nofollow noreferrer\">Keybase.io</a></li>\n</ul>\n\n<p>SO badge firsts:</p>\n\n<ul>\n<li>bronze, silver <em>and</em> gold for <a href=\"/questions/tagged/beautifulsoup\" class=\"post-tag\" title=\"show questions tagged &#39;beautifulsoup&#39;\" rel=\"tag\">beautifulsoup</a>, <a href=\"/questions/tagged/plone\" class=\"post-tag\" title=\"show questions tagged &#39;plone&#39;\" rel=\"tag\">plone</a>, <a href=\"/questions/tagged/python-decorators\" class=\"post-tag\" title=\"show questions tagged &#39;python-decorators&#39;\" rel=\"tag\">python-decorators</a> &amp; <a href=\"/questions/tagged/python-requests\" class=\"post-tag\" title=\"show questions tagged &#39;python-requests&#39;\" rel=\"tag\">python-requests</a></li>\n<li>silver and gold for <a href=\"/questions/tagged/csv\" class=\"post-tag\" title=\"show questions tagged &#39;csv&#39;\" rel=\"tag\">csv</a>, <a href=\"/questions/tagged/decorator\" class=\"post-tag\" title=\"show questions tagged &#39;decorator&#39;\" rel=\"tag\">decorator</a>, <a href=\"/questions/tagged/generator\" class=\"post-tag\" title=\"show questions tagged &#39;generator&#39;\" rel=\"tag\">generator</a>, <a href=\"/questions/tagged/list-comprehension\" class=\"post-tag\" title=\"show questions tagged &#39;list-comprehension&#39;\" rel=\"tag\">list-comprehension</a>, <a href=\"/questions/tagged/python-2.7\" class=\"post-tag\" title=\"show questions tagged &#39;python-2.7&#39;\" rel=\"tag\">python-2.7</a> &amp; <a href=\"/questions/tagged/tuples\" class=\"post-tag\" title=\"show questions tagged &#39;tuples&#39;\" rel=\"tag\">tuples</a></li>\n<li>gold for <a href=\"/questions/tagged/for-loop\" class=\"post-tag\" title=\"show questions tagged &#39;for-loop&#39;\" rel=\"tag\">for-loop</a>, <a href=\"/questions/tagged/if-statement\" class=\"post-tag\" title=\"show questions tagged &#39;if-statement&#39;\" rel=\"tag\">if-statement</a>, <a href=\"/questions/tagged/python-3.x\" class=\"post-tag\" title=\"show questions tagged &#39;python-3.x&#39;\" rel=\"tag\">python-3.x</a> &amp; <a href=\"/questions/tagged/utf-8\" class=\"post-tag\" title=\"show questions tagged &#39;utf-8&#39;\" rel=\"tag\">utf-8</a></li>\n<li>bronze and silver for <a href=\"/questions/tagged/arguments\" class=\"post-tag\" title=\"show questions tagged &#39;arguments&#39;\" rel=\"tag\">arguments</a>, <a href=\"/questions/tagged/buildout\" class=\"post-tag\" title=\"show questions tagged &#39;buildout&#39;\" rel=\"tag\">buildout</a>, <a href=\"/questions/tagged/itertools\" class=\"post-tag\" title=\"show questions tagged &#39;itertools&#39;\" rel=\"tag\">itertools</a>, <a href=\"/questions/tagged/python-3.4\" class=\"post-tag\" title=\"show questions tagged &#39;python-3.4&#39;\" rel=\"tag\">python-3.4</a>, <a href=\"/questions/tagged/python-import\" class=\"post-tag\" title=\"show questions tagged &#39;python-import&#39;\" rel=\"tag\">python-import</a>, <a href=\"/questions/tagged/python-internals\" class=\"post-tag\" title=\"show questions tagged &#39;python-internals&#39;\" rel=\"tag\">python-internals</a>, <a href=\"/questions/tagged/typeerror\" class=\"post-tag\" title=\"show questions tagged &#39;typeerror&#39;\" rel=\"tag\">typeerror</a> &amp; <a href=\"/questions/tagged/zope\" class=\"post-tag\" title=\"show questions tagged &#39;zope&#39;\" rel=\"tag\">zope</a></li>\n<li>silver badges for <a href=\"/questions/tagged/iteration\" class=\"post-tag\" title=\"show questions tagged &#39;iteration&#39;\" rel=\"tag\">iteration</a>, <a href=\"/questions/tagged/mocking\" class=\"post-tag\" title=\"show questions tagged &#39;mocking&#39;\" rel=\"tag\">mocking</a>, <a href=\"/questions/tagged/module\" class=\"post-tag\" title=\"show questions tagged &#39;module&#39;\" rel=\"tag\">module</a>, <a href=\"/questions/tagged/pip\" class=\"post-tag\" title=\"show questions tagged &#39;pip&#39;\" rel=\"tag\">pip</a>, <a href=\"/questions/tagged/python-2.x\" class=\"post-tag\" title=\"show questions tagged &#39;python-2.x&#39;\" rel=\"tag\">python-2.x</a>, <a href=\"/questions/tagged/set\" class=\"post-tag\" title=\"show questions tagged &#39;set&#39;\" rel=\"tag\">set</a>, <a href=\"/questions/tagged/split\" class=\"post-tag\" title=\"show questions tagged &#39;split&#39;\" rel=\"tag\">split</a>, <a href=\"/questions/tagged/string-formatting\" class=\"post-tag\" title=\"show questions tagged &#39;string-formatting&#39;\" rel=\"tag\">string-formatting</a> &amp; <a href=\"/questions/tagged/urllib2\" class=\"post-tag\" title=\"show questions tagged &#39;urllib2&#39;\" rel=\"tag\">urllib2</a></li>\n<li>and bronze badges for another 57 tags.</li>\n</ul>"
  }
]


---Query 5 ---

SELECT ROUND(AVG(reputation)) as reputation_mean, FORMAT_DATE('%Y',creation_date) AS seniority
FROM `bigquery-public-data.stackoverflow.users` 
GROUP BY seniority


***Query 5 - Json***

[
  {
    "reputation_mean": "8729.0",
    "seniority": "2008"
  },
  {
    "reputation_mean": "3255.0",
    "seniority": "2009"
  },
  {
    "reputation_mean": "1148.0",
    "seniority": "2010"
  },
  {
    "reputation_mean": "678.0",
    "seniority": "2011"
  },
  {
    "reputation_mean": "312.0",
    "seniority": "2012"
  },
  {
    "reputation_mean": "141.0",
    "seniority": "2013"
  },
  {
    "reputation_mean": "88.0",
    "seniority": "2014"
  },
  {
    "reputation_mean": "64.0",
    "seniority": "2015"
  },
  {
    "reputation_mean": "38.0",
    "seniority": "2016"
  },
  {
    "reputation_mean": "22.0",
    "seniority": "2017"
  },
  {
    "reputation_mean": "15.0",
    "seniority": "2018"
  },
  {
    "reputation_mean": "9.0",
    "seniority": "2019"
  },
  {
    "reputation_mean": "5.0",
    "seniority": "2020"
  },
  {
    "reputation_mean": "2.0",
    "seniority": "2021"
  }
]

אכן יש קשר בין הותק למוניטין של האנשים. עלינו לנרמל בדרך מסויימת את הוותק בשביל שנוכל לדעת מה האיכות של אדם מסויים. אך מצד שני לותק אכן יש מקדם גבוהה לכישרון העובד. 
	
---Query 6 ---

SELECT ROUND(AVG(reputation)) as reputation_mean, FORMAT_DATE('%Y',creation_date) AS seniority
FROM `bigquery-public-data.stackoverflow.users` 
GROUP BY seniority

***Query 6 - Json***

[
  {
    "display_name": "Jon Skeet",
    "reputation": "1242443",
    "website_url": "http://csharpindepth.com",
    "about_me": "<p>\nAuthor of <a href=\"https://www.manning.com/books/c-sharp-in-depth-fourth-edition?a_aid=jonskeet&a_bid=66d590c3\" rel=\"nofollow noreferrer\">C# in Depth</a>.<br>\nCurrently a software engineer at Google, London.<br>\nUsually a Microsoft MVP (C#, 2003-2010, 2011-)\n</p>\n\n<p>Sites:</p>\n\n<ul>\n<li><a href=\"http://csharpindepth.com\" rel=\"nofollow noreferrer\">C# in Depth</a>\n<li><a href=\"http://codeblog.jonskeet.uk\" rel=\"nofollow noreferrer\">Coding blog</a>\n<li><a href=\"http://jonskeet.uk/csharp\" rel=\"nofollow noreferrer\">C# articles</a>\n<li><a href=\"http://twitter.com/jonskeet\" rel=\"nofollow noreferrer\">Twitter updates (@jonskeet)</a>\n</ul>\n\n<p>Email: skeet@pobox.com (but please read <a href=\"https://codeblog.jonskeet.uk/2012/08/22/stack-overflow-and-personal-emails/\" rel=\"nofollow noreferrer\">my blog post on Stack Overflow-related emails</a> first)</p>",
    "n_reputation": "4.53491695E8"
  }
]

---Query 7 ---

SELECT COUNT(IF(questions.answer_count > 0, 1, NULL))/COUNT(questions.answer_count) AS user_ans,
IF(users.profile_image_url IS NOT NULL, 'has_img','hasnt_img') AS image 
FROM `bigquery-public-data.stackoverflow.users` AS users, `bigquery-public-data.stackoverflow.posts_questions` AS questions
WHERE users.id = questions.owner_user_id
GROUP BY image

***Query 7 - Json***

[
  {
    "user_ans": "0.8254613458295119",
    "image": "has_img"
  },
  {
    "user_ans": "0.9068438448657518",
    "image": "hasnt_img"
  }
]

משתמשים שיש להם תמונת פרופיל לא מקבלים יותר מענים מאשר משתמשים ללא תמונת פרופיל. בפלט אפשר לקרות ש0.82 מהפוסטים שכוללים תמונה זוכיעם להיענות ו0.9 אחוז מהפוסטים ללא תמונה זוכים להיענות. 
ישנן כמה מסקנות, מבחינת המשתמש, הוא לא צריך להתאמץ להעלות תמונה בשביל לצפות לתגובות, מצד שני אולי כדי להגדיל ולהדגיש את התמונות באתר, ואולי אז לתמונות יהיה יותר השפעה על המענים.